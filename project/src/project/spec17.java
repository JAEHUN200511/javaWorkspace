package project;

public class spec17 {

/* #비트 논리 연산자
 * 
 *  & 연산자
 *  두 개의 비트 값이 모두 1인 경우에만 결과 값이 1이 된다
 *  
 *  | 연산자
 *  비트 값이 하나라도 1이면 결과 값이 1이 된다
 *  
 *  ^ 연산자
 *  같은 값이면 0, 다른 값
 *  
 *  ~연산자
 *  
 *  비트 이동 연산자
 *  
 *  0은 1로, 1은 0으로 바꾸는 연산자
 *  반전 연산자라고도 불린다
 *  
 *  #비트 이동 연산자
 *  
 *  << 연산자
 *  왼쪽으로 비트를 이동하는 연산자
 *  int num = 5;
 *  num << 2;
 *  
 *  왼쪽으로 n비트 이동한다는 것은 기존 값에 2의 n승만큼 곱한다는 뜻이다
 *  
 *  >> 연산자
 *  오른쪽으로 비트를 이동하는 연산자
 *  int num = 9;
 *  num >> 2;
 *  
 *  오른쪽으로 n비트 이동한다는 것은 기존 값에 2의 n승만큼 나눈다는 뜻이다
 *  
 *  >>> 연산자 
 *  >> 연산과 동일하게 비트를 오른쪽으로 이동하나, 
 *  
 *  연산자 우선순위
 */
	
	

	
	